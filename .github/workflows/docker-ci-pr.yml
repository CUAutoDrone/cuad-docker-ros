name: ci-pr

on:
  pull_request:
  pull_request_target:
    types:
      - labeled

env:
  IMAGE_NAME: ghcr.io/cuautodrone/cuad-ros:latest
  TEST_NAME: ghcr.io/cuautodrone/cuad-ros:test

jobs:
  docker-pr:
    if: ((github.event.pull_request.head.repo.full_name == github.repository && github.actor != 'dependabot[bot]') || contains(github.event.pull_request.labels.*.name, 'run-ci-pr')) && ${{ !contains(github.event.pull_request.labels.*.name, 'pr-pull') }}
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      pull-requests: write
    steps:
      - name: Free Up Space
        uses: jlumbroso/free-disk-space@v1.3.1
        with:
          docker-images: false
          swap-storage: false

      - name: Clean Old Package Config
        run: sudo apt purge -y '~c'

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
          
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Checkout Repo
        uses: actions/checkout@v5

      - name: Get Git commit timestamps
        run: echo "TIMESTAMP=$(git log -1 --pretty=%ct)" >> $GITHUB_ENV

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.IMAGE_NAME }}

      - name: Get ROS Apt Source Version
        run: echo "ROS_APT_SOURCE_VERSION=$(curl -s https://api.github.com/repos/ros-infrastructure/ros-apt-source/releases/latest | grep -F "tag_name" | awk -F\" '{print $4}')" >> $GITHUB_ENV

      - name: Validate Build Configuration
        uses: docker/bake-action@v6
        with:
          targets: validate-build
          set: "default.args.ROS_APT_SOURCE_VERSION=${{ env.ROS_APT_SOURCE_VERSION }}"
        env:
          SOURCE_DATE_EPOCH: ${{ env.TIMESTAMP }}

      - name: Build
        uses: docker/bake-action@v6
        with:
          files: |
            ./docker-bake.hcl
            cwd://${{ steps.meta.outputs.bake-file }}
          targets: default
          set: |
            default.args.ROS_APT_SOURCE_VERSION=${{ env.ROS_APT_SOURCE_VERSION }}
            default.tags=${{ env.TEST_NAME }}
          push: true
          provenance: true
          sbom: true
        env:
          SOURCE_DATE_EPOCH: ${{ env.TIMESTAMP }}

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Scout AMD64
        uses: docker/scout-action@v1
        with: 
          command: quickview,cves,recommendations,compare
          image: ghcr.io/cuautodrone/cuad-ros:test
          to: ghcr.io/cuautodrone/cuad-ros:latest
          platform: linux/amd64
          only-fixed: true

      - name: Scout ARM64
        uses: docker/scout-action@v1
        with: 
          command: quickview,cves,recommendations,compare
          image: ghcr.io/cuautodrone/cuad-ros:test
          to: ghcr.io/cuautodrone/cuad-ros:latest
          platform: linux/arm64
          only-fixed: true